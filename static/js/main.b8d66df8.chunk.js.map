{"version":3,"sources":["Components/Square/Square.js","Components/Board/Board.js","Containers/Game/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","classList","col","push","row","className","join","value","Board","board","i","j","displayBoard","Game","state","history","Array","fill","stepNumber","nextStep","status","squareClickHandler","slice","length","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAoBeA,EAhBA,SAACC,GACZ,IAAIC,EAAY,GAQhB,OAPID,EAAME,IAAM,GACZD,EAAUE,KAAK,cAEfH,EAAMI,IAAM,GACZH,EAAUE,KAAK,aAIf,qBAAKE,UAAWJ,EAAUK,KAAK,KAA/B,SACKN,EAAMO,SCcJC,G,MAxBD,SAACR,GAiBb,OACE,qBAAKK,UAAU,QAAf,SAjBmB,WAEnB,IADA,IAAII,EAAQ,GACHC,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACrBF,EAAMN,KACF,cAAC,EAAD,CACII,MAAOP,EAAMS,MAAMC,GAAGC,GAEtBP,IAAKM,EACLR,IAAKS,GAFA,GAAKD,EAAIC,IAM1B,OAAOF,EAKFG,OCUMC,E,4MA7BXC,MAAQ,CACJC,QAAS,CAAC,CACNN,MAAOO,MAAM,GAAGC,KAAKD,MAAM,GAAGC,KAAK,QAEvCC,WAAY,EACZC,SAAU,IACVC,OAAQ,M,EAGZC,mBAAqB,SAACjB,EAAKF,GACvB,IAAI,EAAKY,MAAMM,OAGf,KAAML,EAAU,EAAKD,MAAMC,QAAQO,MAAM,EAAG,EAAKR,MAAMK,SAAS,GAChDJ,EAAQA,EAAQQ,OAAS,K,4CAI7C,WACI,IAAMR,EAAUS,KAAKV,MAAMC,QAE3B,OACI,qBAAKV,UAAU,iBAAf,SACI,cAAC,EAAD,CAAOI,MAAOM,EAAQS,KAAKV,MAAMI,YAAYT,c,GAxB1CgB,a,MCSJC,MARf,WACE,OACE,qBAAKrB,UAAU,MAAf,SACE,cAAC,EAAD,OCISsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b8d66df8.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Square.css';\n\nconst Square = (props) => {\n    let classList = [];\n    if (props.col > 0) {\n        classList.push('borderLeft');\n    }\n    if (props.row > 0) {\n        classList.push('borderTop');\n    }\n\n    return (\n        <div className={classList.join(' ')} >\n            {props.value}\n        </div>\n    );\n};\n\nexport default Square;","import React from \"react\";\n\nimport Square from \"../Square/Square\";\nimport './Board.css';\n\nconst Board = (props) => {\n  const displayBoard = () => {\n    let board = [];\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        board.push(\n            <Square \n                value={props.board[i][j]} \n                key={\"\" + i + j} \n                row={i}\n                col={j}\n            />);\n      }\n    }\n    return board;\n  };\n\n  return (\n    <div className='Board'>\n        {displayBoard()}\n    </div>\n    );\n};\n\nexport default Board;\n","import React, { Component } from 'react';\n\nimport Board from '../../Components/Board/Board';\n\nclass Game extends Component {\n    state = {\n        history: [{\n            board: Array(3).fill(Array(3).fill('X'))\n        }],\n        stepNumber: 0,\n        nextStep: 'O',\n        status: null,\n    }\n\n    squareClickHandler = (row, col) => {\n        if (this.state.status) {\n            return;\n        }\n        const history = this.state.history.slice(0, this.state.nextStep+1);\n        const current = history[history.length - 1];\n        \n    }\n\n    render () {\n        const history = this.state.history;\n\n        return (\n            <div className='game-container'>\n                <Board board={history[this.state.stepNumber].board} />\n            </div>\n        );\n    }\n};\n\nexport default Game;","import React from 'react';\n\nimport Game from './Containers/Game/Game';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}